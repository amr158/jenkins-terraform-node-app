Q1:
• Delete instructor with first name “ebtesam” and has only 5 courses in courses array
 db.instructor.deleteOne({$and:[{"firstName":"ebtesam"},{ "courses": {$size: 5} }]})
• Add active property to all instructors and set its value to true
 db.instructor.updateMany({},{$set:{"active":"true"}})
• Change “EF” course to “jquery” for “mazen mohammed” instructor (without knowing EF
Index)
 db.instructor.updateOne({$and:[{"firstName":"mazen"},{ "lastName": "ali" }]},{$set: {"courses.$[element]":"jquery"}},{ arrayFilters: [{ element: "EF" }]})
• Remove courses property for “ahmed mohammed ” instructor
 db.instructor.updateOne({$and:[{"firstName":"noha"},{ "lastName": "hesham" }]},{$push:{"courses":"jquery"}})
• Remove courses property for “ahmed mohammed ” instructor
 db.instructor.updateOne({$and:[{"firstName":"ahmed"},{ "lastName": "mohammed" }]},{$unset:{"courses":""}})
• Decrease salary by 500 for all instructors that has only 3 courses in their list ($inc)
 db.instructor.updateMany({ "courses": {$size: 3} },{$inc:{"salary":-500}})
• Rename address field for all instructors to fullAddress. [Bonus]
db.instructor.updateMany({ },{ $rename: { "address": "fullAddress" } } )
• Change street number for noha hesham to 20
db.instructor.updateOne({$and:[{"firstName":"noha"},{ "lastName": "hesham" }]},{$set: {"fullAddress.street":20}})



Q2:
db.createCollection("workers",{validator:{$jsonSchema:{bsonType:"object",required: [ "firstName", "lastName" ,"salary" ,"age" ],properties:{firstName:{bsonType:"string"},lastName:{bsonType:"string"},age: {bsonType: "int",minimum: 25,maximum: 45},salary:{bsonType:"int",minimum: 35000},address: {bsonType: "object",required: [ "city","street","building" ],properties: {city: {enum: [ "cairo","mansoura","ismailia" ]},street: {bsonType: "int"},building: {bsonType: "int"}}},courses:{bsonType: [ "string" ],minItems: 1,uniqueItems: true}}}}})

Q3: Display the count of students (use Group by with _id: null, to not specify grouping column).
db.student.aggregate([{"$group" : {_id:null, count:{$sum:1}}}])

Q4:
db.student.updateOne({"name" : "amr" },{$set:{"courses":["admin","mongo"]}})
db.student.findOne({"name" : "amr" }).courses

Q5:
db.Faculty.insert({"name" : "CS" , "_id" : 2})
db.student.insert({"name" : "amr" , "Faculty_id" : 2 })
let q = db.student.findOne({"name" : "amr"}).Faculty_id
db.Faculty.find({"_id" : q})

Q6:
db.createCollection("Faculty")
db.Faculty.insert({"_id":3 , "Name" : "BIS"})
db.student.insertOne({"name" : "amr" , "Faculty":{"$ref" : "Faculty" , "$id" : 3}}) 
let c = db.student.findOne({"name" : "amr"}).Faculty
db[c.$ref].findOne({_id : c.$id})